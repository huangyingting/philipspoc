name: export-and-branch-solution

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: HealthcareSystem
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/


permissions:
  contents: write
  pull-requests: write
jobs:
  export-from-dev:
    environment: philips-dev
    runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1

    - name: Who Am I
      uses: microsoft/powerplatform-actions/who-am-i@v1
      with:
        environment-url: ${{secrets.POWERPLATFORM_URL}}
        app-id: ${{secrets.CLIENT_ID}}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{secrets.TENANT_ID}}


    - name: Export Solution
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{secrets.POWERPLATFORM_URL}}
        app-id: ${{secrets.CLIENT_ID}}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        tenant-id: ${{secrets.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        managed: false
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    # - name: Upload the ready to ship solution to GH artifact store
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: managedSolutions
    #     path: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip


    - name: Unpack Solution
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: Branch Solution, Prepare it for a Pull Request
      id: branch_solution
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true
        branch-name: ${{ github.event.inputs.solution_name }}-${{ github.run_number }}

    - name: Create PR
      uses: actions/github-script@v7
      env:
        BRANCH_NAME: ${{ github.event.inputs.solution_name }}-${{ github.run_number }}
        SOLUTION_NAME: ${{ github.event.inputs.solution_name }}
        BASE_BRANCH: main
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const branch = process.env.BRANCH_NAME;
          const base = process.env.BASE_BRANCH || 'main';
          const title = `Power Platform export: ${process.env.SOLUTION_NAME}`;
          const headQualified = `${context.repo.owner}:${branch}`;

          if (!branch) {
            core.setFailed('Branch name not found.');
            return;
          }

          // Create a new PR
          const { data: pr } = await github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head: branch,
            base,
            title,
            body: 'Automated PR generated after exporting and branching the Power Platform solution.'
          });

          core.info(`PR created: ${pr.html_url}`);